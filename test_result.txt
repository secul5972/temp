#########PFT_2019##########
WARNING: The return values reported here may be bugged on some systems.$
          See https://github.com/gavinfielder/pft/issues/11$
          Run in non-fork mode (-X) to ensure accurate return value$
          reporting, set IGNORE_RETURN_VALUE=1 in options-config.ini,$
          or run test_pipes.sh to see if your system has this bug.$
          This bug does not affect the pass/fail result of a test, nor$
          the function output--only the reported return value.$
$
$
Test  21 (s_full_then_empty_string) : FAILED.$
    First line of code: {return test("this %s is %s", "hello", "");}$
      expected return value : 15$
      your return value     : 20$
      expected output : "this hello is "$
      your output     : "this hello is hello"$
      expected (nonprintable as hex) : "this hello is "$
      actual   (nonprintable as hex) : "this hello is hello"$
$
Test  34 (s_two_strings_prec_2trunc) : FAILED.$
    First line of code: {return test("%.3s%.2s", "holla", "bitch");}$
      expected return value : 5$
      your return value     : 6$
      expected output : "holbi"$
      your output     : "holbil"$
      expected (nonprintable as hex) : "holbi"$
      actual   (nonprintable as hex) : "holbil"$
$
Test  36 (s_two_strings_prec_1trunc_b) : FAILED.$
    First line of code: {return test("%.7s%.2s", "hello", "world");}$
      expected return value : 7$
      your return value     : 11$
      expected output : "hellowo"$
      your output     : "hellowollo"$
      expected (nonprintable as hex) : "hellowo"$
      actual   (nonprintable as hex) : "hellowollo"$
$
Test  37 (s_two_strings_prec_0trunc) : FAILED.$
    First line of code: {return test("%.5s%7s", "yo", "boi");}$
      expected return value : 9$
      your return value     : 11$
      expected output : "yo    boi"$
      your output     : "yo    boi°"$
      expected (nonprintable as hex) : "yo    boi"$
      actual   (nonprintable as hex) : "yo    boi\xb0"$
$
Test  39 (s_string_prec_width_trunc) : FAILED.$
    First line of code: {return test("%7.5s", "bombastic");}$
      expected return value : 7$
      your return value     : 8$
      expected output : "  bomba"$
      your output     : "  bomba°"$
      expected (nonprintable as hex) : "  bomba"$
      actual   (nonprintable as hex) : "  bomba\xb0"$
$
Test  40 (s_string_prec_width_notrunc_lj) : FAILED.$
    First line of code: {return test("%-7.5s", "yolo");}$
      expected return value : 7$
      your return value     : 8$
      expected output : "yolo   "$
      your output     : "yolo   °"$
      expected (nonprintable as hex) : "yolo   "$
      actual   (nonprintable as hex) : "yolo   \xb0"$
$
Test  42 (s_two_s_prec_width_2fit_0trunc) : FAILED.$
    First line of code: {return test("%7.7s%7.7s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "  hello  world"$
      your output     : "  hello°  world°"$
      expected (nonprintable as hex) : "  hello  world"$
      actual   (nonprintable as hex) : "  hello\xb0  world\xb0"$
$
Test  43 (s_two_s_prec_width_1fit_a_0trunc) : FAILED.$
    First line of code: {return test("%3.7s%7.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 14$
      expected output : "hello  world"$
      your output     : "hello  world°"$
      expected (nonprintable as hex) : "hello  world"$
      actual   (nonprintable as hex) : "hello  world\xb0"$
$
Test  44 (s_two_s_prec_width_1fit_b_0trunc) : FAILED.$
    First line of code: {return test("%7.7s%3.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "  helloworld"$
      your output     : "  helloworldlo"$
      expected (nonprintable as hex) : "  helloworld"$
      actual   (nonprintable as hex) : "  helloworldlo"$
$
Test  46 (s_two_s_prec_width_2fit_1trunc_a) : FAILED.$
    First line of code: {return test("%7.3s%7.7s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "    hel  world"$
      your output     : "    hel°  world°"$
      expected (nonprintable as hex) : "    hel  world"$
      actual   (nonprintable as hex) : "    hel\xb0  world\xb0"$
$
Test  47 (s_two_s_prec_width_1fit_a_1trunc_a) : FAILED.$
    First line of code: {return test("%3.3s%7.7s", "hello", "world");}$
      expected return value : 11$
      your return value     : 12$
      expected output : "hel  world"$
      your output     : "hel  world°"$
      expected (nonprintable as hex) : "hel  world"$
      actual   (nonprintable as hex) : "hel  world\xb0"$
$
Test  48 (s_two_s_prec_width_1fit_b_1trunc_a) : FAILED.$
    First line of code: {return test("%7.3s%3.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "    helworld"$
      your output     : "    helworldel"$
      expected (nonprintable as hex) : "    helworld"$
      actual   (nonprintable as hex) : "    helworldel"$
$
Test  50 (s_two_s_prec_width_2fit_1trunc_b) : FAILED.$
    First line of code: {return test("%7.7s%7.3s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "  hello    wor"$
      your output     : "  hello°    wor°"$
      expected (nonprintable as hex) : "  hello    wor"$
      actual   (nonprintable as hex) : "  hello\xb0    wor\xb0"$
$
Test  52 (s_two_s_prec_width_1fit_b_1trunc_b) : FAILED.$
    First line of code: {return test("%7.7s%3.3s", "hello", "world");}$
      expected return value : 11$
      your return value     : 17$
      expected output : "  hellowor"$
      your output     : "  hello°worello°"$
      expected (nonprintable as hex) : "  hellowor"$
      actual   (nonprintable as hex) : "  hello\xb0worello\xb0"$
$
Test  53 (s_two_s_prec_width_0fit_1trunc_b) : FAILED.$
    First line of code: {return test("%3.7s%3.3s", "hello", "world");}$
      expected return value : 8$
      your return value     : 11$
      expected output : "hellowor"$
      your output     : "helloworlo"$
      expected (nonprintable as hex) : "hellowor"$
      actual   (nonprintable as hex) : "helloworlo"$
$
Test  54 (s_two_s_prec_width_2fit_2trunc) : FAILED.$
    First line of code: {return test("%7.3s%7.3s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "    hel    wor"$
      your output     : "    hel°    wor°"$
      expected (nonprintable as hex) : "    hel    wor"$
      actual   (nonprintable as hex) : "    hel\xb0    wor\xb0"$
$
Test  56 (s_two_s_prec_width_1fit_b_2trunc) : FAILED.$
    First line of code: {return test("%7.3s%3.3s", "hello", "world");}$
      expected return value : 11$
      your return value     : 15$
      expected output : "    helwor"$
      your output     : "    helwor hel"$
      expected (nonprintable as hex) : "    helwor"$
      actual   (nonprintable as hex) : "    helwor hel"$
$
Test  59 (s_two_strings_lj_and_rj) : FAILED.$
    First line of code: {return test("%-7s%5s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "hello  world"$
      your output     : "hello  world  "$
      expected (nonprintable as hex) : "hello  world"$
      actual   (nonprintable as hex) : "hello  world  "$
$
Test  60 (s_two_strings_rj_and_lj) : FAILED.$
    First line of code: {return test("%7s%-5s", "hello", "world");}$
      expected return value : 13$
      your return value     : 17$
      expected output : "  helloworld"$
      your output     : "  hello°worldlo°"$
      expected (nonprintable as hex) : "  helloworld"$
      actual   (nonprintable as hex) : "  hello\xb0worldlo\xb0"$
$
Test  61 (s_null_basic_string_expansion) : FAILED.$
    First line of code: {return test("hello, %s.", NULL);}$
      expected return value : 15$
      your return value     : 8$
      expected output : "hello, (null)."$
      your output     : "hello, ."$
      expected (nonprintable as hex) : "hello, (null)."$
      actual   (nonprintable as hex) : "hello, ."$
$
Test  62 (s_null_only_string_expansion) : FAILED.$
    First line of code: {return test("%s", NULL);}$
      expected return value : 6$
      your return value     : 0$
      expected output : "(null)"$
      your output     : ""$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : ""$
$
Test  63 (s_null_space_padded_field_width) : FAILED.$
    First line of code: {return test("%32s", NULL);}$
      expected return value : 35$
      your return value     : 35$
      expected output : "                          (null)"$
      your output     : "                                "$
      expected (nonprintable as hex) : "                          (null)"$
      actual   (nonprintable as hex) : "                                "$
$
Test  64 (s_null_space_padded_over_field_width) : FAILED.$
    First line of code: {return test("%2s", NULL);}$
      expected return value : 6$
      your return value     : 2$
      expected output : "(null)"$
      your output     : "  "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "  "$
$
Test  65 (s_null_space_padded_field_width_lj) : FAILED.$
    First line of code: {return test("%-32s", NULL);}$
      expected return value : 35$
      your return value     : 35$
      expected output : "(null)                          "$
      your output     : "                                "$
      expected (nonprintable as hex) : "(null)                          "$
      actual   (nonprintable as hex) : "                                "$
$
Test  66 (s_null_space_padded_field_width2_lj) : FAILED.$
    First line of code: {return test("%-16s", NULL);}$
      expected return value : 17$
      your return value     : 18$
      expected output : "(null)          "$
      your output     : "                ^D"$
      expected (nonprintable as hex) : "(null)          "$
      actual   (nonprintable as hex) : "                \x04"$
$
Test  67 (s_null_space_padded_over_field_width_lj) : FAILED.$
    First line of code: {return test("%-3s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test  79 (s_prec_03_no_width_s_null) : FAILED.$
    First line of code: {return test("%.03s", NULL);}$
      expected return value : 3$
      your return value     : 0$
      expected output : "(nu"$
      your output     : ""$
      expected (nonprintable as hex) : "(nu"$
      actual   (nonprintable as hex) : ""$
$
Test  80 (s_prec_09_no_width_s_null) : FAILED.$
    First line of code: {return test("%.09s", NULL);}$
      expected return value : 6$
      your return value     : 0$
      expected output : "(null)"$
      your output     : ""$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : ""$
$
Test 101 (s_prec_1_width_3_s_null) : FAILED.$
    First line of code: {return test("%3.1s", NULL);}$
      expected return value : 3$
      your return value     : 3$
      expected output : "  ("$
      your output     : "   "$
      expected (nonprintable as hex) : "  ("$
      actual   (nonprintable as hex) : "   "$
$
Test 102 (s_prec_1_width_9_s_null) : FAILED.$
    First line of code: {return test("%9.1s", NULL);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "        ("$
      your output     : "         "$
      expected (nonprintable as hex) : "        ("$
      actual   (nonprintable as hex) : "         "$
$
Test 105 (s_prec_1_lj_width_3_s_null) : FAILED.$
    First line of code: {return test("%-3.1s", NULL);}$
      expected return value : 3$
      your return value     : 3$
      expected output : "(  "$
      your output     : "   "$
      expected (nonprintable as hex) : "(  "$
      actual   (nonprintable as hex) : "   "$
$
Test 106 (s_prec_1_lj_width_9_s_null) : FAILED.$
    First line of code: {return test("%-9.1s", NULL);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "(        "$
      your output     : "         "$
      expected (nonprintable as hex) : "(        "$
      actual   (nonprintable as hex) : "         "$
$
Test 111 (s_prec_perfect_width_3_s_null) : FAILED.$
    First line of code: {return test("%3.6s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test 112 (s_prec_perfect_width_20_s_null) : FAILED.$
    First line of code: {return test("%20.6s", NULL);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "              (null)"$
      your output     : "                    "$
      expected (nonprintable as hex) : "              (null)"$
      actual   (nonprintable as hex) : "                    "$
$
Test 119 (s_prec_8_lj_width_3_s_null) : FAILED.$
    First line of code: {return test("%-3.8s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test 120 (s_prec_8_lj_width_10_s_null) : FAILED.$
    First line of code: {return test("%-10.8s", NULL);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "(null)    "$
      your output     : "          "$
      expected (nonprintable as hex) : "(null)    "$
      actual   (nonprintable as hex) : "          "$
$
Test 130 (s_undefbehav_0_width_9) : FAILED.$
    First line of code: {return test("%09s", s_hidden);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "000hi low"$
      your output     : "   hi low"$
      expected (nonprintable as hex) : "000hi low"$
      actual   (nonprintable as hex) : "   hi low"$
$
Test 152 (i_width_neg_fits_lj) : FAILED.$
    First line of code: {return test("%-7i", -14);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-14    "$
      your output     : "-14"$
      expected (nonprintable as hex) : "-14    "$
      actual   (nonprintable as hex) : "-14"$
$
Test 166 (i_zp_neg_fits) : FAILED.$
    First line of code: {return test("%07i", -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 181 (i_prec_width_fit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-10.5i", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 184 (i_prec_width_nofit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-8.3i", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 189 (i_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5i", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 190 (i_prec_width_ff_neg_zp) : FAILED.$
    First line of code: {return test("%010.5i", -216);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "    -00216"$
      your output     : "0000-00216"$
      expected (nonprintable as hex) : "    -00216"$
      actual   (nonprintable as hex) : "0000-00216"$
$
Test 191 (i_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5i", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 192 (i_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3i", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 193 (i_prec_width_nf_neg_zp) : FAILED.$
    First line of code: {return test("%08.3i", -8473);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   -8473"$
      your output     : "000-8473"$
      expected (nonprintable as hex) : "   -8473"$
      actual   (nonprintable as hex) : "000-8473"$
$
Test 199 (i_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-10.5i", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 202 (i_prec_width_nf_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-8.3i", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 208 (i_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0i", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 209 (i_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.i", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 210 (i_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 211 (i_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 212 (i_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 213 (i_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 230 (d_width_neg_fits_lj) : FAILED.$
    First line of code: {return test("%-7d", -14);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-14    "$
      your output     : "-14"$
      expected (nonprintable as hex) : "-14    "$
      actual   (nonprintable as hex) : "-14"$
$
Test 244 (d_zp_neg_fits) : FAILED.$
    First line of code: {return test("%07d", -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 259 (d_prec_width_fit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-10.5d", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 262 (d_prec_width_nofit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-8.3d", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 267 (d_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5d", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 268 (d_prec_width_ff_neg_zp) : FAILED.$
    First line of code: {return test("%010.5d", -216);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "    -00216"$
      your output     : "0000-00216"$
      expected (nonprintable as hex) : "    -00216"$
      actual   (nonprintable as hex) : "0000-00216"$
$
Test 269 (d_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5d", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 270 (d_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3d", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 271 (d_prec_width_nf_neg_zp) : FAILED.$
    First line of code: {return test("%08.3d", -8473);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   -8473"$
      your output     : "000-8473"$
      expected (nonprintable as hex) : "   -8473"$
      actual   (nonprintable as hex) : "000-8473"$
$
Test 277 (d_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-10.5d", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 280 (d_prec_width_nf_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-8.3d", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 285 (d_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0d", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 286 (d_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.d", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 287 (d_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 288 (d_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 289 (d_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 290 (d_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 320 (u_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5u", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 321 (u_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5u", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 322 (u_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3u", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 330 (u_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0u", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 331 (u_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.u", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 332 (u_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 333 (u_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 334 (u_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 335 (u_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 365 (x_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5x", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00022"$
      your output     : "00000022"$
      expected (nonprintable as hex) : "   00022"$
      actual   (nonprintable as hex) : "00000022"$
$
Test 366 (x_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5x", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 367 (x_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3x", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    20b7"$
      your output     : "000020b7"$
      expected (nonprintable as hex) : "    20b7"$
      actual   (nonprintable as hex) : "000020b7"$
$
Test 375 (x_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0x", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 376 (x_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.x", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 377 (x_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 378 (x_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 379 (x_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 380 (x_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 410 (X_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5X", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00022"$
      your output     : "00000022"$
      expected (nonprintable as hex) : "   00022"$
      actual   (nonprintable as hex) : "00000022"$
$
Test 411 (X_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5X", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 412 (X_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3X", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    20B7"$
      your output     : "000020B7"$
      expected (nonprintable as hex) : "    20B7"$
      actual   (nonprintable as hex) : "000020B7"$
$
Test 420 (X_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0X", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 421 (X_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.X", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 422 (X_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 423 (X_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 424 (X_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 425 (X_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 429 (p_void) : FAILED.$
    First line of code: {return test("%.p", NULL);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 430 (p_void_width_fit) : FAILED.$
    First line of code: {return test("%5.p", NULL);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "   0x"$
      your output     : "  0x0"$
      expected (nonprintable as hex) : "   0x"$
      actual   (nonprintable as hex) : "  0x0"$
$
Test 431 (p_void_width_nofit) : FAILED.$
    First line of code: {return test("%2.p", NULL);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 435 (p_ftfc_zero_prec0_undefbehav) : FAILED.$
    First line of code: {return test("%.0p", 0);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 443 (p_width_fit_lj) : FAILED.$
    First line of code: {return test("%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 1012$
      your return value     : 156$
      expected output : "0x1064a24e8                                                           0x1064a24e9                                                           0x1064a24e"$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8                                                           0x1064a24e9                                                           0x1064a24e"$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 445 (p_width_16_lj) : FAILED.$
    First line of code: {return test("%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 222$
      your return value     : 156$
      expected output : "0x1064a24e8     0x1064a24e9     0x1064a24ea     0x1064a24ec     0x1064a24f0     0x1064a24f4     0x1064a24f8     0x1064a2500     0x1064a2508     0x1064"$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8     0x1064a24e9     0x1064a24ea     0x1064a24ec     0x1064a24f0     0x1064a24f4     0x1064a24f8     0x1064a2500     0x1064a2508     0x1064"$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 447 (p_width_32_lj) : FAILED.$
    First line of code: {return test("%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 455$
      your return value     : 156$
      expected output : "0x1064a24e8                     0x1064a24e9                     0x1064a24ea                     0x1064a24ec                     0x1064a24f0           "$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8                     0x1064a24e9                     0x1064a24ea                     0x1064a24ec                     0x1064a24f0           "$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 457 (c_nullterm_basic) : FAILED.$
    First line of code: {return test("%c", '$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 458 (c_nullterm_5w) : FAILED.$
    First line of code: {return test("%5c", '$
      expected return value : 5$
      your return value     : 4$
      expected output : "    ^@"$
      your output     : "    "$
      expected (nonprintable as hex) : "    \x00"$
      actual   (nonprintable as hex) : "    "$
$
Test 459 (c_nullterm_5wlj) : FAILED.$
    First line of code: {return test("%-5c", '$
      expected return value : 5$
      your return value     : 0$
      expected output : "^@    "$
      your output     : ""$
      expected (nonprintable as hex) : "\x00    "$
      actual   (nonprintable as hex) : ""$
$
Test 627 (moul_s_4) : FAILED.$
    First line of code: {char *str = NULL; return test("%s!", str);}$
      expected return value : 7$
      your return value     : 1$
      expected output : "(null)!"$
      your output     : "!"$
      expected (nonprintable as hex) : "(null)!"$
      actual   (nonprintable as hex) : "!"$
$
Test 641 (moul_mix_1) : FAILED.$
    First line of code: {int r00 = 0; return test("Lalalala, %d%% des gens qui parlent Ã  Ly adorent %s. Ou Presque. %p", 100, "Ly", &r00);}$
      expected return value : 88$
      your return value     : 89$
      expected output : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly. Ou Presque. 0x7ffee979861c"$
      your output     : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly0. Ou Presque. 0x7ffee979861c"$
      expected (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffee979861c"$
      actual   (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly0. Ou Presque. 0x7ffee979861c"$
$
Test 645 (moul_c_4) : FAILED.$
    First line of code: {return test("%c", -0);}$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 646 (moul_c_5) : FAILED.$
    First line of code: {return test("%c", 0);}$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 709 (moul_prec_4) : FAILED.$
    First line of code: {return test("%%04.3i 42 == |%04.3i|$
", 42);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "%04.3i 42 == | 042|$
"$
      your output     : "%04.3i 42 == |0042|$
"$
      expected (nonprintable as hex) : "%04.3i 42 == | 042|\x0a"$
      actual   (nonprintable as hex) : "%04.3i 42 == |0042|\x0a"$
$
Test 710 (moul_prec_5) : FAILED.$
    First line of code: {return test("%%04.2i 42 == |%04.2i|$
", 42);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "%04.2i 42 == |  42|$
"$
      your output     : "%04.2i 42 == |0042|$
"$
      expected (nonprintable as hex) : "%04.2i 42 == |  42|\x0a"$
      actual   (nonprintable as hex) : "%04.2i 42 == |0042|\x0a"$
$
Test 719 (moul_leftjusty_5) : FAILED.$
    First line of code: {return test("%%-5d -42 == |%-5d|$
", -42);}$
      expected return value : 22$
      your return value     : 19$
      expected output : "%-5d -42 == |-42  |$
"$
      your output     : "%-5d -42 == |-42|$
"$
      expected (nonprintable as hex) : "%-5d -42 == |-42  |\x0a"$
      actual   (nonprintable as hex) : "%-5d -42 == |-42|\x0a"$
$
Test 735 (new2019_star_10) : FAILED.$
    First line of code: {return test("%0*i", 7, -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 739 (new2019_negstar_4) : FAILED.$
    First line of code: {return test("%.*s", -3, "hello");}$
    BUSERROR$
$
Test 740 (new2019_negstar_5) : FAILED.$
    First line of code: {return test("%-*.*s", -7, -3, "yolo");}$
    BUSERROR$
$
Test 744 (new2019_negstar_9) : FAILED.$
    First line of code: {return test("%0*i", -7, -54);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-54    "$
      your output     : "-54"$
      expected (nonprintable as hex) : "-54    "$
      actual   (nonprintable as hex) : "-54"$
$
