#########PFT_2019##########
WARNING: The return values reported here may be bugged on some systems.$
          See https://github.com/gavinfielder/pft/issues/11$
          Run in non-fork mode (-X) to ensure accurate return value$
          reporting, set IGNORE_RETURN_VALUE=1 in options-config.ini,$
          or run test_pipes.sh to see if your system has this bug.$
          This bug does not affect the pass/fail result of a test, nor$
          the function output--only the reported return value.$
$
$
Test  21 (s_full_then_empty_string) : FAILED.$
    First line of code: {return test("this %s is %s", "hello", "");}$
      expected return value : 15$
      your return value     : 20$
      expected output : "this hello is "$
      your output     : "this hello is hello"$
      expected (nonprintable as hex) : "this hello is "$
      actual   (nonprintable as hex) : "this hello is hello"$
$
Test  34 (s_two_strings_prec_2trunc) : FAILED.$
    First line of code: {return test("%.3s%.2s", "holla", "bitch");}$
      expected return value : 5$
      your return value     : 6$
      expected output : "holbi"$
      your output     : "holbil"$
      expected (nonprintable as hex) : "holbi"$
      actual   (nonprintable as hex) : "holbil"$
$
Test  36 (s_two_strings_prec_1trunc_b) : FAILED.$
    First line of code: {return test("%.7s%.2s", "hello", "world");}$
      expected return value : 7$
      your return value     : 11$
      expected output : "hellowo"$
      your output     : "hellowollo"$
      expected (nonprintable as hex) : "hellowo"$
      actual   (nonprintable as hex) : "hellowollo"$
$
Test  37 (s_two_strings_prec_0trunc) : FAILED.$
    First line of code: {return test("%.5s%7s", "yo", "boi");}$
      expected return value : 9$
      your return value     : 11$
      expected output : "yo    boi"$
      your output     : "yo    boi°"$
      expected (nonprintable as hex) : "yo    boi"$
      actual   (nonprintable as hex) : "yo    boi\xb0"$
$
Test  39 (s_string_prec_width_trunc) : FAILED.$
    First line of code: {return test("%7.5s", "bombastic");}$
      expected return value : 7$
      your return value     : 8$
      expected output : "  bomba"$
      your output     : "  bomba°"$
      expected (nonprintable as hex) : "  bomba"$
      actual   (nonprintable as hex) : "  bomba\xb0"$
$
Test  40 (s_string_prec_width_notrunc_lj) : FAILED.$
    First line of code: {return test("%-7.5s", "yolo");}$
      expected return value : 7$
      your return value     : 8$
      expected output : "yolo   "$
      your output     : "yolo   °"$
      expected (nonprintable as hex) : "yolo   "$
      actual   (nonprintable as hex) : "yolo   \xb0"$
$
Test  42 (s_two_s_prec_width_2fit_0trunc) : FAILED.$
    First line of code: {return test("%7.7s%7.7s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "  hello  world"$
      your output     : "  hello°  world°"$
      expected (nonprintable as hex) : "  hello  world"$
      actual   (nonprintable as hex) : "  hello\xb0  world\xb0"$
$
Test  43 (s_two_s_prec_width_1fit_a_0trunc) : FAILED.$
    First line of code: {return test("%3.7s%7.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 14$
      expected output : "hello  world"$
      your output     : "hello  world°"$
      expected (nonprintable as hex) : "hello  world"$
      actual   (nonprintable as hex) : "hello  world\xb0"$
$
Test  44 (s_two_s_prec_width_1fit_b_0trunc) : FAILED.$
    First line of code: {return test("%7.7s%3.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "  helloworld"$
      your output     : "  helloworldlo"$
      expected (nonprintable as hex) : "  helloworld"$
      actual   (nonprintable as hex) : "  helloworldlo"$
$
Test  46 (s_two_s_prec_width_2fit_1trunc_a) : FAILED.$
    First line of code: {return test("%7.3s%7.7s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "    hel  world"$
      your output     : "    hel°  world°"$
      expected (nonprintable as hex) : "    hel  world"$
      actual   (nonprintable as hex) : "    hel\xb0  world\xb0"$
$
Test  47 (s_two_s_prec_width_1fit_a_1trunc_a) : FAILED.$
    First line of code: {return test("%3.3s%7.7s", "hello", "world");}$
      expected return value : 11$
      your return value     : 12$
      expected output : "hel  world"$
      your output     : "hel  world°"$
      expected (nonprintable as hex) : "hel  world"$
      actual   (nonprintable as hex) : "hel  world\xb0"$
$
Test  48 (s_two_s_prec_width_1fit_b_1trunc_a) : FAILED.$
    First line of code: {return test("%7.3s%3.7s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "    helworld"$
      your output     : "    helworldel"$
      expected (nonprintable as hex) : "    helworld"$
      actual   (nonprintable as hex) : "    helworldel"$
$
Test  50 (s_two_s_prec_width_2fit_1trunc_b) : FAILED.$
    First line of code: {return test("%7.7s%7.3s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "  hello    wor"$
      your output     : "  hello°    wor°"$
      expected (nonprintable as hex) : "  hello    wor"$
      actual   (nonprintable as hex) : "  hello\xb0    wor\xb0"$
$
Test  52 (s_two_s_prec_width_1fit_b_1trunc_b) : FAILED.$
    First line of code: {return test("%7.7s%3.3s", "hello", "world");}$
      expected return value : 11$
      your return value     : 17$
      expected output : "  hellowor"$
      your output     : "  hello°worello°"$
      expected (nonprintable as hex) : "  hellowor"$
      actual   (nonprintable as hex) : "  hello\xb0worello\xb0"$
$
Test  53 (s_two_s_prec_width_0fit_1trunc_b) : FAILED.$
    First line of code: {return test("%3.7s%3.3s", "hello", "world");}$
      expected return value : 8$
      your return value     : 11$
      expected output : "hellowor"$
      your output     : "helloworlo"$
      expected (nonprintable as hex) : "hellowor"$
      actual   (nonprintable as hex) : "helloworlo"$
$
Test  54 (s_two_s_prec_width_2fit_2trunc) : FAILED.$
    First line of code: {return test("%7.3s%7.3s", "hello", "world");}$
      expected return value : 15$
      your return value     : 17$
      expected output : "    hel    wor"$
      your output     : "    hel°    wor°"$
      expected (nonprintable as hex) : "    hel    wor"$
      actual   (nonprintable as hex) : "    hel\xb0    wor\xb0"$
$
Test  56 (s_two_s_prec_width_1fit_b_2trunc) : FAILED.$
    First line of code: {return test("%7.3s%3.3s", "hello", "world");}$
      expected return value : 11$
      your return value     : 15$
      expected output : "    helwor"$
      your output     : "    helwor hel"$
      expected (nonprintable as hex) : "    helwor"$
      actual   (nonprintable as hex) : "    helwor hel"$
$
Test  59 (s_two_strings_lj_and_rj) : FAILED.$
    First line of code: {return test("%-7s%5s", "hello", "world");}$
      expected return value : 13$
      your return value     : 15$
      expected output : "hello  world"$
      your output     : "hello  world  "$
      expected (nonprintable as hex) : "hello  world"$
      actual   (nonprintable as hex) : "hello  world  "$
$
Test  60 (s_two_strings_rj_and_lj) : FAILED.$
    First line of code: {return test("%7s%-5s", "hello", "world");}$
      expected return value : 13$
      your return value     : 17$
      expected output : "  helloworld"$
      your output     : "  hello°worldlo°"$
      expected (nonprintable as hex) : "  helloworld"$
      actual   (nonprintable as hex) : "  hello\xb0worldlo\xb0"$
$
Test  61 (s_null_basic_string_expansion) : FAILED.$
    First line of code: {return test("hello, %s.", NULL);}$
      expected return value : 15$
      your return value     : 8$
      expected output : "hello, (null)."$
      your output     : "hello, ."$
      expected (nonprintable as hex) : "hello, (null)."$
      actual   (nonprintable as hex) : "hello, ."$
$
Test  62 (s_null_only_string_expansion) : FAILED.$
    First line of code: {return test("%s", NULL);}$
      expected return value : 6$
      your return value     : 0$
      expected output : "(null)"$
      your output     : ""$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : ""$
$
Test  63 (s_null_space_padded_field_width) : FAILED.$
    First line of code: {return test("%32s", NULL);}$
      expected return value : 35$
      your return value     : 35$
      expected output : "                          (null)"$
      your output     : "                                "$
      expected (nonprintable as hex) : "                          (null)"$
      actual   (nonprintable as hex) : "                                "$
$
Test  64 (s_null_space_padded_over_field_width) : FAILED.$
    First line of code: {return test("%2s", NULL);}$
      expected return value : 6$
      your return value     : 2$
      expected output : "(null)"$
      your output     : "  "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "  "$
$
Test  65 (s_null_space_padded_field_width_lj) : FAILED.$
    First line of code: {return test("%-32s", NULL);}$
      expected return value : 35$
      your return value     : 35$
      expected output : "(null)                          "$
      your output     : "                                "$
      expected (nonprintable as hex) : "(null)                          "$
      actual   (nonprintable as hex) : "                                "$
$
Test  66 (s_null_space_padded_field_width2_lj) : FAILED.$
    First line of code: {return test("%-16s", NULL);}$
      expected return value : 17$
      your return value     : 18$
      expected output : "(null)          "$
      your output     : "                ^D"$
      expected (nonprintable as hex) : "(null)          "$
      actual   (nonprintable as hex) : "                \x04"$
$
Test  67 (s_null_space_padded_over_field_width_lj) : FAILED.$
    First line of code: {return test("%-3s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test  79 (s_prec_03_no_width_s_null) : FAILED.$
    First line of code: {return test("%.03s", NULL);}$
      expected return value : 3$
      your return value     : 0$
      expected output : "(nu"$
      your output     : ""$
      expected (nonprintable as hex) : "(nu"$
      actual   (nonprintable as hex) : ""$
$
Test  80 (s_prec_09_no_width_s_null) : FAILED.$
    First line of code: {return test("%.09s", NULL);}$
      expected return value : 6$
      your return value     : 0$
      expected output : "(null)"$
      your output     : ""$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : ""$
$
Test 101 (s_prec_1_width_3_s_null) : FAILED.$
    First line of code: {return test("%3.1s", NULL);}$
      expected return value : 3$
      your return value     : 3$
      expected output : "  ("$
      your output     : "   "$
      expected (nonprintable as hex) : "  ("$
      actual   (nonprintable as hex) : "   "$
$
Test 102 (s_prec_1_width_9_s_null) : FAILED.$
    First line of code: {return test("%9.1s", NULL);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "        ("$
      your output     : "         "$
      expected (nonprintable as hex) : "        ("$
      actual   (nonprintable as hex) : "         "$
$
Test 105 (s_prec_1_lj_width_3_s_null) : FAILED.$
    First line of code: {return test("%-3.1s", NULL);}$
      expected return value : 3$
      your return value     : 3$
      expected output : "(  "$
      your output     : "   "$
      expected (nonprintable as hex) : "(  "$
      actual   (nonprintable as hex) : "   "$
$
Test 106 (s_prec_1_lj_width_9_s_null) : FAILED.$
    First line of code: {return test("%-9.1s", NULL);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "(        "$
      your output     : "         "$
      expected (nonprintable as hex) : "(        "$
      actual   (nonprintable as hex) : "         "$
$
Test 111 (s_prec_perfect_width_3_s_null) : FAILED.$
    First line of code: {return test("%3.6s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test 112 (s_prec_perfect_width_20_s_null) : FAILED.$
    First line of code: {return test("%20.6s", NULL);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "              (null)"$
      your output     : "                    "$
      expected (nonprintable as hex) : "              (null)"$
      actual   (nonprintable as hex) : "                    "$
$
Test 119 (s_prec_8_lj_width_3_s_null) : FAILED.$
    First line of code: {return test("%-3.8s", NULL);}$
      expected return value : 6$
      your return value     : 3$
      expected output : "(null)"$
      your output     : "   "$
      expected (nonprintable as hex) : "(null)"$
      actual   (nonprintable as hex) : "   "$
$
Test 120 (s_prec_8_lj_width_10_s_null) : FAILED.$
    First line of code: {return test("%-10.8s", NULL);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "(null)    "$
      your output     : "          "$
      expected (nonprintable as hex) : "(null)    "$
      actual   (nonprintable as hex) : "          "$
$
Test 130 (s_undefbehav_0_width_9) : FAILED.$
    First line of code: {return test("%09s", s_hidden);}$
      expected return value : 9$
      your return value     : 9$
      expected output : "000hi low"$
      your output     : "   hi low"$
      expected (nonprintable as hex) : "000hi low"$
      actual   (nonprintable as hex) : "   hi low"$
$
Test 152 (i_width_neg_fits_lj) : FAILED.$
    First line of code: {return test("%-7i", -14);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-14    "$
      your output     : "-14"$
      expected (nonprintable as hex) : "-14    "$
      actual   (nonprintable as hex) : "-14"$
$
Test 166 (i_zp_neg_fits) : FAILED.$
    First line of code: {return test("%07i", -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 181 (i_prec_width_fit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-10.5i", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 184 (i_prec_width_nofit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-8.3i", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 189 (i_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5i", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 190 (i_prec_width_ff_neg_zp) : FAILED.$
    First line of code: {return test("%010.5i", -216);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "    -00216"$
      your output     : "0000-00216"$
      expected (nonprintable as hex) : "    -00216"$
      actual   (nonprintable as hex) : "0000-00216"$
$
Test 191 (i_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5i", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 192 (i_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3i", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 193 (i_prec_width_nf_neg_zp) : FAILED.$
    First line of code: {return test("%08.3i", -8473);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   -8473"$
      your output     : "000-8473"$
      expected (nonprintable as hex) : "   -8473"$
      actual   (nonprintable as hex) : "000-8473"$
$
Test 199 (i_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-10.5i", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 202 (i_prec_width_nf_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-8.3i", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 208 (i_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0i", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 209 (i_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.i", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 210 (i_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 211 (i_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 212 (i_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 213 (i_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.i", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 230 (d_width_neg_fits_lj) : FAILED.$
    First line of code: {return test("%-7d", -14);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-14    "$
      your output     : "-14"$
      expected (nonprintable as hex) : "-14    "$
      actual   (nonprintable as hex) : "-14"$
$
Test 244 (d_zp_neg_fits) : FAILED.$
    First line of code: {return test("%07d", -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 259 (d_prec_width_fit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-10.5d", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 262 (d_prec_width_nofit_fit_neg_lj) : FAILED.$
    First line of code: {return test("%-8.3d", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 267 (d_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5d", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 268 (d_prec_width_ff_neg_zp) : FAILED.$
    First line of code: {return test("%010.5d", -216);}$
      expected return value : 11$
      your return value     : 11$
      expected output : "    -00216"$
      your output     : "0000-00216"$
      expected (nonprintable as hex) : "    -00216"$
      actual   (nonprintable as hex) : "0000-00216"$
$
Test 269 (d_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5d", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 270 (d_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3d", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 271 (d_prec_width_nf_neg_zp) : FAILED.$
    First line of code: {return test("%08.3d", -8473);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   -8473"$
      your output     : "000-8473"$
      expected (nonprintable as hex) : "   -8473"$
      actual   (nonprintable as hex) : "000-8473"$
$
Test 277 (d_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-10.5d", -216);}$
      expected return value : 11$
      your return value     : 6$
      expected output : "-00216    "$
      your output     : "-00216"$
      expected (nonprintable as hex) : "-00216    "$
      actual   (nonprintable as hex) : "-00216"$
$
Test 280 (d_prec_width_nf_neg_ljzp_ignoreflag) : FAILED.$
    First line of code: {return test("%0-8.3d", -8473);}$
      expected return value : 8$
      your return value     : 5$
      expected output : "-8473   "$
      your output     : "-8473"$
      expected (nonprintable as hex) : "-8473   "$
      actual   (nonprintable as hex) : "-8473"$
$
Test 285 (d_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0d", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 286 (d_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.d", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 287 (d_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 288 (d_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 289 (d_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 290 (d_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.d", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 320 (u_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5u", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00034"$
      your output     : "00000034"$
      expected (nonprintable as hex) : "   00034"$
      actual   (nonprintable as hex) : "00000034"$
$
Test 321 (u_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5u", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 322 (u_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3u", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    8375"$
      your output     : "00008375"$
      expected (nonprintable as hex) : "    8375"$
      actual   (nonprintable as hex) : "00008375"$
$
Test 330 (u_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0u", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 331 (u_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.u", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 332 (u_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 333 (u_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 334 (u_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 335 (u_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.u", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 365 (x_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5x", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00022"$
      your output     : "00000022"$
      expected (nonprintable as hex) : "   00022"$
      actual   (nonprintable as hex) : "00000022"$
$
Test 366 (x_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5x", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 367 (x_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3x", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    20b7"$
      your output     : "000020b7"$
      expected (nonprintable as hex) : "    20b7"$
      actual   (nonprintable as hex) : "000020b7"$
$
Test 375 (x_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0x", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 376 (x_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.x", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 377 (x_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 378 (x_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 379 (x_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 380 (x_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.x", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 410 (X_prec_width_ff_pos_zp) : FAILED.$
    First line of code: {return test("%08.5X", 34);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00022"$
      your output     : "00000022"$
      expected (nonprintable as hex) : "   00022"$
      actual   (nonprintable as hex) : "00000022"$
$
Test 411 (X_prec_width_ff_zero_zp) : FAILED.$
    First line of code: {return test("%08.5X", 0);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "   00000"$
      your output     : "00000000"$
      expected (nonprintable as hex) : "   00000"$
      actual   (nonprintable as hex) : "00000000"$
$
Test 412 (X_prec_width_nf_pos_zp) : FAILED.$
    First line of code: {return test("%08.3X", 8375);}$
      expected return value : 8$
      your return value     : 8$
      expected output : "    20B7"$
      your output     : "000020B7"$
      expected (nonprintable as hex) : "    20B7"$
      actual   (nonprintable as hex) : "000020B7"$
$
Test 420 (X_prec0val0_basic) : FAILED.$
    First line of code: {return test("%.0X", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 421 (X_prec0val0_implicit) : FAILED.$
    First line of code: {return test("%.X", 0);}$
      expected return value : 0$
      your return value     : 1$
      expected output : ""$
      your output     : "0"$
      expected (nonprintable as hex) : ""$
      actual   (nonprintable as hex) : "0"$
$
Test 422 (X_prec0val0_w) : FAILED.$
    First line of code: {return test("%5.0X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 423 (X_prec0val0_w_impl) : FAILED.$
    First line of code: {return test("%5.X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "    0"$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "    0"$
$
Test 424 (X_prec0val0_wlj) : FAILED.$
    First line of code: {return test("%-5.0X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 425 (X_prec0val0_wlj_impl) : FAILED.$
    First line of code: {return test("%-5.X", 0);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "     "$
      your output     : "0    "$
      expected (nonprintable as hex) : "     "$
      actual   (nonprintable as hex) : "0    "$
$
Test 429 (p_void) : FAILED.$
    First line of code: {return test("%.p", NULL);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 430 (p_void_width_fit) : FAILED.$
    First line of code: {return test("%5.p", NULL);}$
      expected return value : 5$
      your return value     : 5$
      expected output : "   0x"$
      your output     : "  0x0"$
      expected (nonprintable as hex) : "   0x"$
      actual   (nonprintable as hex) : "  0x0"$
$
Test 431 (p_void_width_nofit) : FAILED.$
    First line of code: {return test("%2.p", NULL);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 435 (p_ftfc_zero_prec0_undefbehav) : FAILED.$
    First line of code: {return test("%.0p", 0);}$
      expected return value : 2$
      your return value     : 3$
      expected output : "0x"$
      your output     : "0x0"$
      expected (nonprintable as hex) : "0x"$
      actual   (nonprintable as hex) : "0x0"$
$
Test 443 (p_width_fit_lj) : FAILED.$
    First line of code: {return test("%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 1012$
      your return value     : 156$
      expected output : "0x1064a24e8                                                           0x1064a24e9                                                           0x1064a24e"$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8                                                           0x1064a24e9                                                           0x1064a24e"$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 445 (p_width_16_lj) : FAILED.$
    First line of code: {return test("%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 222$
      your return value     : 156$
      expected output : "0x1064a24e8     0x1064a24e9     0x1064a24ea     0x1064a24ec     0x1064a24f0     0x1064a24f4     0x1064a24f8     0x1064a2500     0x1064a2508     0x1064"$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8     0x1064a24e9     0x1064a24ea     0x1064a24ec     0x1064a24f0     0x1064a24f4     0x1064a24f8     0x1064a2500     0x1064a2508     0x1064"$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 447 (p_width_32_lj) : FAILED.$
    First line of code: {return test("%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 455$
      your return value     : 156$
      expected output : "0x1064a24e8                     0x1064a24e9                     0x1064a24ea                     0x1064a24ec                     0x1064a24f0           "$
      your output     : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
      expected (nonprintable as hex) : "0x1064a24e8                     0x1064a24e9                     0x1064a24ea                     0x1064a24ec                     0x1064a24f0           "$
      actual   (nonprintable as hex) : "0x1064a24e80x1064a24e90x1064a24ea0x1064a24ec0x1064a24f00x1064a24f40x1064a24f80x1064a25000x1064a25080x1064a25100x1064a25180x1064a2520"$
$
Test 457 (c_nullterm_basic) : FAILED.$
    First line of code: {return test("%c", '$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 458 (c_nullterm_5w) : FAILED.$
    First line of code: {return test("%5c", '$
      expected return value : 5$
      your return value     : 4$
      expected output : "    ^@"$
      your output     : "    "$
      expected (nonprintable as hex) : "    \x00"$
      actual   (nonprintable as hex) : "    "$
$
Test 459 (c_nullterm_5wlj) : FAILED.$
    First line of code: {return test("%-5c", '$
      expected return value : 5$
      your return value     : 0$
      expected output : "^@    "$
      your output     : ""$
      expected (nonprintable as hex) : "\x00    "$
      actual   (nonprintable as hex) : ""$
$
Test 627 (moul_s_4) : FAILED.$
    First line of code: {char *str = NULL; return test("%s!", str);}$
      expected return value : 7$
      your return value     : 1$
      expected output : "(null)!"$
      your output     : "!"$
      expected (nonprintable as hex) : "(null)!"$
      actual   (nonprintable as hex) : "!"$
$
Test 641 (moul_mix_1) : FAILED.$
    First line of code: {int r00 = 0; return test("Lalalala, %d%% des gens qui parlent Ã  Ly adorent %s. Ou Presque. %p", 100, "Ly", &r00);}$
      expected return value : 88$
      your return value     : 89$
      expected output : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly. Ou Presque. 0x7ffee979861c"$
      your output     : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly0. Ou Presque. 0x7ffee979861c"$
      expected (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffee979861c"$
      actual   (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly0. Ou Presque. 0x7ffee979861c"$
$
Test 645 (moul_c_4) : FAILED.$
    First line of code: {return test("%c", -0);}$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 646 (moul_c_5) : FAILED.$
    First line of code: {return test("%c", 0);}$
      expected return value : 1$
      your return value     : 0$
      expected output : "^@"$
      your output     : ""$
      expected (nonprintable as hex) : "\x00"$
      actual   (nonprintable as hex) : ""$
$
Test 709 (moul_prec_4) : FAILED.$
    First line of code: {return test("%%04.3i 42 == |%04.3i|$
", 42);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "%04.3i 42 == | 042|$
"$
      your output     : "%04.3i 42 == |0042|$
"$
      expected (nonprintable as hex) : "%04.3i 42 == | 042|\x0a"$
      actual   (nonprintable as hex) : "%04.3i 42 == |0042|\x0a"$
$
Test 710 (moul_prec_5) : FAILED.$
    First line of code: {return test("%%04.2i 42 == |%04.2i|$
", 42);}$
      expected return value : 22$
      your return value     : 22$
      expected output : "%04.2i 42 == |  42|$
"$
      your output     : "%04.2i 42 == |0042|$
"$
      expected (nonprintable as hex) : "%04.2i 42 == |  42|\x0a"$
      actual   (nonprintable as hex) : "%04.2i 42 == |0042|\x0a"$
$
Test 719 (moul_leftjusty_5) : FAILED.$
    First line of code: {return test("%%-5d -42 == |%-5d|$
", -42);}$
      expected return value : 22$
      your return value     : 19$
      expected output : "%-5d -42 == |-42  |$
"$
      your output     : "%-5d -42 == |-42|$
"$
      expected (nonprintable as hex) : "%-5d -42 == |-42  |\x0a"$
      actual   (nonprintable as hex) : "%-5d -42 == |-42|\x0a"$
$
Test 735 (new2019_star_10) : FAILED.$
    First line of code: {return test("%0*i", 7, -54);}$
      expected return value : 7$
      your return value     : 7$
      expected output : "-000054"$
      your output     : "0000-54"$
      expected (nonprintable as hex) : "-000054"$
      actual   (nonprintable as hex) : "0000-54"$
$
Test 739 (new2019_negstar_4) : FAILED.$
    First line of code: {return test("%.*s", -3, "hello");}$
    BUSERROR$
$
Test 740 (new2019_negstar_5) : FAILED.$
    First line of code: {return test("%-*.*s", -7, -3, "yolo");}$
    BUSERROR$
$
Test 744 (new2019_negstar_9) : FAILED.$
    First line of code: {return test("%0*i", -7, -54);}$
      expected return value : 7$
      your return value     : 3$
      expected output : "-54    "$
      your output     : "-54"$
      expected (nonprintable as hex) : "-54    "$
      actual   (nonprintable as hex) : "-54"$
$
#####42TESTS-PRINTF#####
----------Test 3 : ----------
"%0i, %0d, %0d, %0d, %0d, %0d, %0d, %0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59
---
> 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 13 : ----------
"%.0i, %.0d, %.0d, %.0d, %.0d, %.0d, %.0d, %.0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 17 : ----------
"%-.i, %-.d, %-.d, %-.d, %-.d, %-.d, %-.d, %-.d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 18 : ----------
"%-.0i, %-.0d, %-.0d, %-.0d, %-.0d, %-.0d, %-.0d, %-.0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 20 : ----------
"%.i, %.d, %.d, %.d, %.d, %.d, %.d, %.d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 21 : ----------
"%-0.0i, %-0.0d, %-0.0d, %-0.0d, %-0.0d, %-0.0d, %-0.0d, %-0.0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 22 : ----------
"%00i, %00d, %00d, %00d, %00d, %00d, %00d, %00d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59
---
> 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 23 : ----------
"%1.i, %1.d, %1.d, %1.d, %1.d, %1.d, %1.d, %1.d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 28 : ----------
"%-1.i, %-1.d, %-1.d, %-1.d, %-1.d, %-1.d, %-1d, %-1d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 31 : ----------
"%-1.0i, %-1.0d, %-1.0d, %-1.0d, %-1.0d, %-1.0d, %-1.0d, %-1.0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 33 : ----------
"%1.0i, %1.0d, %1.0d, %1.0d, %1.0d, %1.0d, %1.0d, %1.0d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 34 : ----------
"%*i, %*d, %*d, %*d, %*d, %*d, %*d, %*d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 35 : ----------
"%0*i, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 36 : ----------
"%-*i, %-*d, %-*d, %-*d, %-*d, %-*d, %-*d, %-*d" // 1st '*' = -4, 2nd '*' = 0

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 51 : ----------
"%0*i, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d" // 1st '*' = 0, 2nd '*' = 0

1c1
< 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59
---
> 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 53 : ----------
"%.*i, %.*d, %.*d, %.*d, %.*d, %.*d, %.*d, %.*d" // 1st '*' = 0, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 67 : ----------
"%0*i, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d, %0*d" // 1st '*' = 4, 2nd '*' = 0

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
> 0008, -012, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69

----------Test 68 : ----------
"%-*i, %-*d, %-*d, %-*d, %-*d, %-*d, %-*d, %-*d" // 1st '*' = 4, 2nd '*' = 0

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 76 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = -2, 2nd '*' = 0

1c1
< 8 , -12, 123456789, 0 , -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
> 8 , -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 77 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = -2, 2nd '*' = 0

1c1
< 8 , -12, 123456789, 0 , -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
> 8 , -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 78 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = -2, 2nd '*' = 0

1c1
< 8 , -12, 123456789, 0 , -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
> 8 , -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 97 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = -1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 98 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = -1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 99 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = -1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 114 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 0, 2nd '*' = -2

1c1
< 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59
---
> 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 117 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 0, 2nd '*' = -1

1c1
< 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59
---
> 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 118 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 0, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 119 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 0, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789, , -12345678, 97, -2147483648, 2147483647 --- Return : 59

----------Test 139 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 140 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 141 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 1, 2nd '*' = 0

1c1
< 8, -12, 123456789, 0, -12345678, 97, -2147483648, 2147483647 --- Return : 60
---
> 8, -12, 123456789,  , -12345678, 97, -2147483648, 2147483647 --- Return : 60

----------Test 160 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 2, 2nd '*' = 0

1c1
<  8, -12, 123456789,  0, -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
>  8, -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 161 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 2, 2nd '*' = 0

1c1
< 8 , -12, 123456789, 0 , -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
> 8 , -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 162 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 2, 2nd '*' = 0

1c1
< 08, -12, 123456789, 00, -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
>  8, -12, 123456789,   , -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 165 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 2, 2nd '*' = 1

1c1
< 08, -12, 123456789, 00, -12345678, 97, -2147483648, 2147483647 --- Return : 62
---
>  8, -12, 123456789,  0, -12345678, 97, -2147483648, 2147483647 --- Return : 62

----------Test 181 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 3, 2nd '*' = 0

1c1
<   8, -12, 123456789,   0, -12345678,  97, -2147483648, 2147483647 --- Return : 65
---
>   8, -12, 123456789,    , -12345678,  97, -2147483648, 2147483647 --- Return : 65

----------Test 182 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 3, 2nd '*' = 0

1c1
< 8  , -12, 123456789, 0  , -12345678, 97 , -2147483648, 2147483647 --- Return : 65
---
> 8  , -12, 123456789,    , -12345678, 97 , -2147483648, 2147483647 --- Return : 65

----------Test 183 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 3, 2nd '*' = 0

1c1
< 008, -12, 123456789, 000, -12345678, 097, -2147483648, 2147483647 --- Return : 65
---
>   8, -12, 123456789,    , -12345678,  97, -2147483648, 2147483647 --- Return : 65

----------Test 186 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 3, 2nd '*' = 1

1c1
< 008, -12, 123456789, 000, -12345678, 097, -2147483648, 2147483647 --- Return : 65
---
>   8, -12, 123456789,   0, -12345678,  97, -2147483648, 2147483647 --- Return : 65

----------Test 189 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 3, 2nd '*' = 2

1c1
< 008, -12, 123456789, 000, -12345678, 097, -2147483648, 2147483647 --- Return : 65
---
>  08, -12, 123456789,  00, -12345678,  97, -2147483648, 2147483647 --- Return : 65

----------Test 197 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 4, 2nd '*' = -2

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 198 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = -2

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
> 0008, -012, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69

----------Test 200 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 4, 2nd '*' = -1

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 201 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = -1

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
> 0008, -012, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69

----------Test 202 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 4, 2nd '*' = 0

1c1
<    8,  -12, 123456789,    0, -12345678,   97, -2147483648, 2147483647 --- Return : 69
---
>    8,  -12, 123456789,     , -12345678,   97, -2147483648, 2147483647 --- Return : 69

----------Test 203 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 4, 2nd '*' = 0

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789,     , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 204 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = 0

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
>    8,  -12, 123456789,     , -12345678,   97, -2147483648, 2147483647 --- Return : 69

----------Test 206 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 4, 2nd '*' = 1

1c1
< 8   , -12, 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 8   , -12 , 123456789, 0   , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 207 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = 1

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
>    8,  -12, 123456789,    0, -12345678,   97, -2147483648, 2147483647 --- Return : 69

----------Test 209 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 4, 2nd '*' = 2

1c1
< 08  , -12, 123456789, 00  , -12345678, 97  , -2147483648, 2147483647 --- Return : 68
---
> 08  , -12 , 123456789, 00  , -12345678, 97  , -2147483648, 2147483647 --- Return : 69

----------Test 210 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = 2

1c1
< 0008, 0-12, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
>   08,  -12, 123456789,   00, -12345678,   97, -2147483648, 2147483647 --- Return : 69

----------Test 213 : ----------
"%0*.*i, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d, %0*.*d" // 1st '*' = 4, 2nd '*' = 3

1c1
< 0008, -012, 123456789, 0000, -12345678, 0097, -2147483648, 2147483647 --- Return : 69
---
>  008, -012, 123456789,  000, -12345678,  097, -2147483648, 2147483647 --- Return : 69

----------Test 217 : ----------
"%*.*i, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d, %*.*d" // 1st '*' = 19, 2nd '*' = 14

1c1
<     -00000000000042,      00000000000042, -42, 42                 , -00000000000042, 00000000000042     ,                 -42,                  42 --- Return : 146
---
>     -00000000000042,      00000000000042, -42                , 42                 , -00000000000042    , 00000000000042     ,                 -42,                  42 --- Return : 166

----------Test 230 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = -4, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 231 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = -3, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a , -12, 0  , %% , -2147483648, 0x12345678, -0  --- Return : 66

----------Test 232 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = -3, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a , -12, 0  , %% , -2147483648, 0x12345678, -0  --- Return : 66

----------Test 233 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = -3, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 234 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = -2, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 235 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = -2, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 236 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = -2, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 237 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = -1, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 238 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = -1, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 239 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = -1, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 240 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = 0, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 241 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = 0, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 242 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = 0, 2nd '*' = 14

0a1
> , , , , , , ,  --- Return : 14

----------Test 243 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = 1, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 244 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = 1, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 245 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = 1, 2nd '*' = 14

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 246 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = 2, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12,  0, %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 247 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = 2, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 248 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = 2, 2nd '*' = 14

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 249 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = 3, 2nd '*' = 14

0a1
> abcdefghijklmnop,  -a, -12,   0,  %%, -2147483648, 0x12345678,  -0 --- Return : 66

----------Test 250 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = 3, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a , -12, 0  , %% , -2147483648, 0x12345678, -0  --- Return : 66

----------Test 251 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = 3, 2nd '*' = 14

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 252 : ----------
"%*s, %*s, %*s, %*s, %*s, %*s, %*s, %*s" // 1st '*' = 4, 2nd '*' = 14

0a1
> abcdefghijklmnop,   -a,  -12,    0,   %%, -2147483648, 0x12345678,   -0 --- Return : 71

----------Test 253 : ----------
"%-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s, %-*s" // 1st '*' = 4, 2nd '*' = 14

0a1
> abcdefghijklmnop, -a  , -12 , 0   , %%  , -2147483648, 0x12345678, -0   --- Return : 71

----------Test 254 : ----------
"%.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s, %.*s" // 1st '*' = 4, 2nd '*' = 14

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 255 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 256 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 257 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 258 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 259 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = 0

0a1
>   ,   ,   ,   ,   ,   ,   ,    --- Return : 30

----------Test 260 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = 0

0a1
>   ,   ,   ,   ,   ,   ,   ,    --- Return : 30

----------Test 261 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = 1

0a1
> a , - , - , 0 , % , - , 0 , -  --- Return : 30

----------Test 262 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = 1

0a1
> a , - , - , 0 , % , - , 0 , -  --- Return : 30

----------Test 263 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = 2

0a1
> ab, -a, -1, 0 , %%, -2, 0x, -0 --- Return : 30

----------Test 264 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = 2

0a1
> ab, -a, -1, 0 , %%, -2, 0x, -0 --- Return : 30

----------Test 265 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = 3

0a1
> abc, -a, -12, 0 , %%, -21, 0x1, -0 --- Return : 34

----------Test 266 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = 3

0a1
> abc, -a, -12, 0 , %%, -21, 0x1, -0 --- Return : 34

----------Test 267 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -2, 2nd '*' = 4

0a1
> abcd, -a, -12, 0 , %%, -214, 0x12, -0 --- Return : 37

----------Test 268 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -2, 2nd '*' = 4

0a1
> abcd, -a, -12, 0 , %%, -214, 0x12, -0 --- Return : 37

----------Test 269 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 270 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 271 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 272 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 273 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = 0

0a1
>  ,  ,  ,  ,  ,  ,  ,   --- Return : 22

----------Test 274 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = 0

0a1
>  ,  ,  ,  ,  ,  ,  ,   --- Return : 22

----------Test 275 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 276 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 277 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 278 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 279 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 280 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 281 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = -1, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 282 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = -1, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 283 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 284 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 285 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 286 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 287 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = 0

0a1
> , , , , , , ,  --- Return : 14

----------Test 288 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = 0

0a1
> , , , , , , ,  --- Return : 14

----------Test 289 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 290 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 291 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 292 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 293 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 294 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 295 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 0, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 296 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 0, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 297 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 298 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 299 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 300 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0, %%, -2147483648, 0x12345678, -0 --- Return : 61

----------Test 301 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = 0

0a1
>  ,  ,  ,  ,  ,  ,  ,   --- Return : 22

----------Test 302 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = 0

0a1
>  ,  ,  ,  ,  ,  ,  ,   --- Return : 22

----------Test 303 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 304 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = 1

0a1
> a, -, -, 0, %, -, 0, - --- Return : 22

----------Test 305 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 306 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = 2

0a1
> ab, -a, -1, 0, %%, -2, 0x, -0 --- Return : 29

----------Test 307 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 308 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = 3

0a1
> abc, -a, -12, 0, %%, -21, 0x1, -0 --- Return : 33

----------Test 309 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 1, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 310 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 1, 2nd '*' = 4

0a1
> abcd, -a, -12, 0, %%, -214, 0x12, -0 --- Return : 36

----------Test 311 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12,  0, %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 312 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 313 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12,  0, %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 314 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a, -12, 0 , %%, -2147483648, 0x12345678, -0 --- Return : 62

----------Test 315 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = 0

0a1
>   ,   ,   ,   ,   ,   ,   ,    --- Return : 30

----------Test 316 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = 0

0a1
>   ,   ,   ,   ,   ,   ,   ,    --- Return : 30

----------Test 317 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = 1

0a1
>  a,  -,  -,  0,  %,  -,  0,  - --- Return : 30

----------Test 318 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = 1

0a1
> a , - , - , 0 , % , - , 0 , -  --- Return : 30

----------Test 319 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = 2

0a1
> ab, -a, -1,  0, %%, -2, 0x, -0 --- Return : 30

----------Test 320 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = 2

0a1
> ab, -a, -1, 0 , %%, -2, 0x, -0 --- Return : 30

----------Test 321 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = 3

0a1
> abc, -a, -12,  0, %%, -21, 0x1, -0 --- Return : 34

----------Test 322 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = 3

0a1
> abc, -a, -12, 0 , %%, -21, 0x1, -0 --- Return : 34

----------Test 323 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 2, 2nd '*' = 4

0a1
> abcd, -a, -12,  0, %%, -214, 0x12, -0 --- Return : 37

----------Test 324 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 2, 2nd '*' = 4

0a1
> abcd, -a, -12, 0 , %%, -214, 0x12, -0 --- Return : 37

----------Test 325 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = -2

0a1
> abcdefghijklmnop,  -a, -12,   0,  %%, -2147483648, 0x12345678,  -0 --- Return : 66

----------Test 326 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a , -12, 0  , %% , -2147483648, 0x12345678, -0  --- Return : 66

----------Test 327 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = -1

0a1
> abcdefghijklmnop,  -a, -12,   0,  %%, -2147483648, 0x12345678,  -0 --- Return : 66

----------Test 328 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a , -12, 0  , %% , -2147483648, 0x12345678, -0  --- Return : 66

----------Test 329 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = 0

0a1
>    ,    ,    ,    ,    ,    ,    ,     --- Return : 38

----------Test 330 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = 0

0a1
>    ,    ,    ,    ,    ,    ,    ,     --- Return : 38

----------Test 331 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = 1

0a1
>   a,   -,   -,   0,   %,   -,   0,   - --- Return : 38

----------Test 332 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = 1

0a1
> a  , -  , -  , 0  , %  , -  , 0  , -   --- Return : 38

----------Test 333 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = 2

0a1
>  ab,  -a,  -1,   0,  %%,  -2,  0x,  -0 --- Return : 38

----------Test 334 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = 2

0a1
> ab , -a , -1 , 0  , %% , -2 , 0x , -0  --- Return : 38

----------Test 335 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = 3

0a1
> abc,  -a, -12,   0,  %%, -21, 0x1,  -0 --- Return : 38

----------Test 336 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = 3

0a1
> abc, -a , -12, 0  , %% , -21, 0x1, -0  --- Return : 38

----------Test 337 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 3, 2nd '*' = 4

0a1
> abcd,  -a, -12,   0,  %%, -214, 0x12,  -0 --- Return : 41

----------Test 338 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 3, 2nd '*' = 4

0a1
> abcd, -a , -12, 0  , %% , -214, 0x12, -0  --- Return : 41

----------Test 339 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = -2

0a1
> abcdefghijklmnop,   -a,  -12,    0,   %%, -2147483648, 0x12345678,   -0 --- Return : 71

----------Test 340 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = -2

0a1
> abcdefghijklmnop, -a  , -12 , 0   , %%  , -2147483648, 0x12345678, -0   --- Return : 71

----------Test 341 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = -1

0a1
> abcdefghijklmnop,   -a,  -12,    0,   %%, -2147483648, 0x12345678,   -0 --- Return : 71

----------Test 342 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = -1

0a1
> abcdefghijklmnop, -a  , -12 , 0   , %%  , -2147483648, 0x12345678, -0   --- Return : 71

----------Test 343 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = 0

0a1
>     ,     ,     ,     ,     ,     ,     ,      --- Return : 46

----------Test 344 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = 0

0a1
>     ,     ,     ,     ,     ,     ,     ,      --- Return : 46

----------Test 345 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = 1

0a1
>    a,    -,    -,    0,    %,    -,    0,    - --- Return : 46

----------Test 346 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = 1

0a1
> a   , -   , -   , 0   , %   , -   , 0   , -    --- Return : 46

----------Test 347 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = 2

0a1
>   ab,   -a,   -1,    0,   %%,   -2,   0x,   -0 --- Return : 46

----------Test 348 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = 2

0a1
> ab  , -a  , -1  , 0   , %%  , -2  , 0x  , -0   --- Return : 46

----------Test 349 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = 3

0a1
>  abc,   -a,  -12,    0,   %%,  -21,  0x1,   -0 --- Return : 46

----------Test 350 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = 3

0a1
> abc , -a  , -12 , 0   , %%  , -21 , 0x1 , -0   --- Return : 46

----------Test 351 : ----------
"%*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s, %*.*s" // 1st '*' = 4, 2nd '*' = 4

0a1
> abcd,   -a,  -12,    0,   %%, -214, 0x12,   -0 --- Return : 46

----------Test 352 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 4, 2nd '*' = 4

0a1
> abcd, -a  , -12 , 0   , %%  , -214, 0x12, -0   --- Return : 46

----------Test 353 : ----------
"%u, %x, %X, %u, %x, %X, %u, %x, %X, %u, %x, %X, %u, %x, %X, %u, %x, %X, %u, %x, %X, %u, %x, %X" // 1st '*' = 5, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 354 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = -1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 355 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = -1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 356 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = -1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 357 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = -1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 358 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = 0, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 359 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = 0, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 360 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = 0, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 361 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = 0, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, , , , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 182

----------Test 362 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = 1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 363 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = 1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 364 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = 1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 365 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = 1, 2nd '*' = 5

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 366 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = 2, 2nd '*' = 5

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  0,  0,  0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 367 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = 2, 2nd '*' = 5

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 368 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = 2, 2nd '*' = 5

0a1
> 8 , 8 , 8 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0 , 0 , 0 , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 369 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = 2, 2nd '*' = 5

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 370 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = 3, 2nd '*' = 5

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   0,   0,   0, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 371 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = 3, 2nd '*' = 5

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 372 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = 3, 2nd '*' = 5

0a1
> 8  , 8  , 8  , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0  , 0  , 0  , 4282621618, ff439eb2, FF439EB2, 97 , 61 , 61 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 373 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = 3, 2nd '*' = 5

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 374 : ----------
"%*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X, %*u, %*x, %*X" // 1st '*' = 4, 2nd '*' = 5

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    0,    0,    0, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 375 : ----------
"%0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X, %0*u, %0*x, %0*X" // 1st '*' = 4, 2nd '*' = 5

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 376 : ----------
"%-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X, %-*u, %-*x, %-*X" // 1st '*' = 4, 2nd '*' = 5

0a1
> 8   , 8   , 8   , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0   , 0   , 0   , 4282621618, ff439eb2, FF439EB2, 97  , 61  , 61  , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 377 : ----------
"%.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X, %.*u, %.*x, %.*X" // 1st '*' = 4, 2nd '*' = 5

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 378 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 379 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 380 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 381 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 382 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 383 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 384 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 385 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 386 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 387 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 388 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 389 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 390 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 391 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 392 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 393 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = -1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 394 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = -1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 395 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = -1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 396 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 397 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 398 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 399 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, , , , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 182

----------Test 400 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, , , , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 182

----------Test 401 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, , , , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 182

----------Test 402 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 403 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 404 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 405 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 406 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 407 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 408 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 409 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 410 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 411 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 0, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 412 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 0, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 413 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 0, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 414 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 415 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 416 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = -1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 417 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 418 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 419 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = 0

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  ,  ,  , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 420 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 421 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 422 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = 1

0a1
> 8, 8, 8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0, 0, 0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 185

----------Test 423 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 424 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 425 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 426 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 427 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 428 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 429 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 430 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 431 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 1, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 432 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = -1

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  0,  0,  0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 433 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = -1

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 434 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = -1

0a1
> 8 , 8 , 8 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0 , 0 , 0 , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 435 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = 0

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   ,   ,   , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 436 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = 0

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   ,   ,   , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 437 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = 0

0a1
> 8 , 8 , 8 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   ,   ,   , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 438 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = 1

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  0,  0,  0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 439 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = 1

0a1
>  8,  8,  8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  0,  0,  0, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 440 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = 1

0a1
> 8 , 8 , 8 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0 , 0 , 0 , 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 441 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 442 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 443 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = 2

0a1
> 08, 08, 08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00, 00, 00, 4282621618, ff439eb2, FF439EB2, 97, 61, 61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 191

----------Test 444 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 445 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 446 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 447 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 2, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 448 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 2, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 449 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 2, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 450 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = -1

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   0,   0,   0, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 451 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = -1

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 452 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = -1

0a1
> 8  , 8  , 8  , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0  , 0  , 0  , 4282621618, ff439eb2, FF439EB2, 97 , 61 , 61 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 453 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = 0

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    ,    ,    , 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 454 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = 0

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    ,    ,    , 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 455 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = 0

0a1
> 8  , 8  , 8  , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    ,    ,    , 4282621618, ff439eb2, FF439EB2, 97 , 61 , 61 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 456 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = 1

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   0,   0,   0, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 457 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = 1

0a1
>   8,   8,   8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   0,   0,   0, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 458 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = 1

0a1
> 8  , 8  , 8  , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0  , 0  , 0  , 4282621618, ff439eb2, FF439EB2, 97 , 61 , 61 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 459 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = 2

0a1
>  08,  08,  08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  00,  00,  00, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 460 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = 2

0a1
>  08,  08,  08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  00,  00,  00, 4282621618, ff439eb2, FF439EB2,  97,  61,  61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 461 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = 2

0a1
> 08 , 08 , 08 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00 , 00 , 00 , 4282621618, ff439eb2, FF439EB2, 97 , 61 , 61 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 462 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 463 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 464 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = 3

0a1
> 008, 008, 008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000, 000, 000, 4282621618, ff439eb2, FF439EB2, 097, 061, 061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 200

----------Test 465 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 3, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 466 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 3, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 467 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 3, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 468 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = -1

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    0,    0,    0, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 469 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = -1

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 470 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = -1

0a1
> 8   , 8   , 8   , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0   , 0   , 0   , 4282621618, ff439eb2, FF439EB2, 97  , 61  , 61  , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 471 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = 0

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,     ,     ,     , 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 472 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = 0

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,     ,     ,     , 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 473 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = 0

0a1
> 8   , 8   , 8   , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,     ,     ,     , 4282621618, ff439eb2, FF439EB2, 97  , 61  , 61  , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 474 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = 1

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    0,    0,    0, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 475 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = 1

0a1
>    8,    8,    8, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,    0,    0,    0, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 476 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = 1

0a1
> 8   , 8   , 8   , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0   , 0   , 0   , 4282621618, ff439eb2, FF439EB2, 97  , 61  , 61  , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 477 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = 2

0a1
>   08,   08,   08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   00,   00,   00, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 478 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = 2

0a1
>   08,   08,   08, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,   00,   00,   00, 4282621618, ff439eb2, FF439EB2,   97,   61,   61, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 479 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = 2

0a1
> 08  , 08  , 08  , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 00  , 00  , 00  , 4282621618, ff439eb2, FF439EB2, 97  , 61  , 61  , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 480 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = 3

0a1
>  008,  008,  008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  000,  000,  000, 4282621618, ff439eb2, FF439EB2,  097,  061,  061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 481 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = 3

0a1
>  008,  008,  008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15,  000,  000,  000, 4282621618, ff439eb2, FF439EB2,  097,  061,  061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 482 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = 3

0a1
> 008 , 008 , 008 , 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 000 , 000 , 000 , 4282621618, ff439eb2, FF439EB2, 097 , 061 , 061 , 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 483 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 4, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 484 : ----------
"%0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X, %0*.*u, %0*.*x, %0*.*X" // 1st '*' = 4, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 485 : ----------
"%-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X, %-*.*u, %-*.*x, %-*.*X" // 1st '*' = 4, 2nd '*' = 4

0a1
> 0008, 0008, 0008, 4294967284, fffffff4, FFFFFFF4, 123456789, 75bcd15, 75BCD15, 0000, 0000, 0000, 4282621618, ff439eb2, FF439EB2, 0097, 0061, 0061, 2147483647, 7fffffff, 7FFFFFFF, 2147483648, 80000000, 80000000 --- Return : 209

----------Test 486 : ----------
"%p, %x, %p, %x, %p, %x, %p, %x" // 1st '*' = 5, 2nd '*' = 5

0a1
> 0xc7e1ab0, c7e1ab0, 0xc5729c0, c5729c0, 0x1, 1, 0x0, 0 --- Return : 54

----------Test 487 : ----------
"%*p, %*x, %*p, %*x, %*p, %*x, %*p, %*x" // 1st '*' = 8, 2nd '*' = 5

0a1
> 0xc7e1ab0,  c7e1ab0, 0xc5729c0,  c5729c0,      0x1,        1,      0x0,        0 --- Return : 80

----------Test 488 : ----------
"%-*p, %-*x, %-*p, %-*x, %-*p, %-*x, %-*p, %-*x" // 1st '*' = 8, 2nd '*' = 5

0a1
> 0xc7e1ab0, c7e1ab0 , 0xc5729c0, c5729c0 , 0x1     , 1       , 0x0     , 0        --- Return : 80

----------Test 489 : ----------
"%*p, %*x, %*p, %*x, %*p, %*x, %*p, %*x" // 1st '*' = 9, 2nd '*' = 5

0a1
> 0xc7e1ab0,   c7e1ab0, 0xc5729c0,   c5729c0,       0x1,         1,       0x0,         0 --- Return : 86

----------Test 490 : ----------
"%-*p, %-*x, %-*p, %-*x, %-*p, %-*x, %-*p, %-*x" // 1st '*' = 9, 2nd '*' = 5

0a1
> 0xc7e1ab0, c7e1ab0  , 0xc5729c0, c5729c0  , 0x1      , 1        , 0x0      , 0         --- Return : 86

----------Test 491 : ----------
"%*p, %*x, %*p, %*x, %*p, %*x, %*p, %*x" // 1st '*' = 10, 2nd '*' = 5

0a1
>  0xc7e1ab0,    c7e1ab0,  0xc5729c0,    c5729c0,        0x1,          1,        0x0,          0 --- Return : 94

----------Test 492 : ----------
"%-*p, %-*x, %-*p, %-*x, %-*p, %-*x, %-*p, %-*x" // 1st '*' = 10, 2nd '*' = 5

0a1
> 0xc7e1ab0 , c7e1ab0   , 0xc5729c0 , c5729c0   , 0x1       , 1         , 0x0       , 0          --- Return : 94

----------Test 493 : ----------
"%*p, %*x, %*p, %*x, %*p, %*x, %*p, %*x" // 1st '*' = 11, 2nd '*' = 5

0a1
>   0xc7e1ab0,     c7e1ab0,   0xc5729c0,     c5729c0,         0x1,           1,         0x0,           0 --- Return : 102

----------Test 494 : ----------
"%-*p, %-*x, %-*p, %-*x, %-*p, %-*x, %-*p, %-*x" // 1st '*' = 11, 2nd '*' = 5

0a1
> 0xc7e1ab0  , c7e1ab0    , 0xc5729c0  , c5729c0    , 0x1        , 1          , 0x0        , 0           --- Return : 102

----------Test 495 : ----------
"%-*.*i, %-*.*d, %-*.*d, %-*.*d, %-*.*d, %-*.*d" // 1st '*' = 42, 2nd '*' = 25

0a1
> 0000000000000000000000008                 , -0000000000000000000000012                , 0000000000000000123456789                 , 0000000000000000000000000                 , -0000000000000000012345678                , 0000000000000000000000097                  --- Return : 262

----------Test 496 : ----------
"%-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s, %-*.*s" // 1st '*' = 42, 2nd '*' = 25

0a1
> abcdefghijklmnop                          , -a                                        , -12                                       , 0                                         , %%                                        , -2147483648                               , 0x12345678                                , -0                                         --- Return : 350

----------Test 497 : ----------
"%*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X, %*.*u, %*.*x, %*.*X" // 1st '*' = 42, 2nd '*' = 25

0a1
>                  0000000000000000000000008,                  0000000000000000000000008,                  0000000000000000000000008,                  0000000000000004294967284,                  00000000000000000fffffff4,                  00000000000000000FFFFFFF4,                  0000000000000000123456789,                  00000000000000000075bcd15,                  00000000000000000075BCD15,                  0000000000000000000000000,                  0000000000000000000000000,                  0000000000000000000000000,                  0000000000000004282621618,                  00000000000000000ff439eb2,                  00000000000000000FF439EB2,                  0000000000000000000000097,                  0000000000000000000000061,                  0000000000000000000000061,                  0000000000000002147483647,                  000000000000000007fffffff,                  000000000000000007FFFFFFF,                  0000000000000002147483648,                  0000000000000000080000000,                  0000000000000000080000000 --- Return : 1054

----------Test 498 : ----------
"%-*p, %-*x, %-*p, %-*x, %-*p, %-*x, %-*p, %-*x" // 1st '*' = 42, 2nd '*' = 25

0a1
> 0xc7e1ab0                                 , c7e1ab0                                   , 0xc5729c0                                 , c5729c0                                   , 0x1                                       , 1                                         , 0x0                                       , 0                                          --- Return : 350

----------Test 499 : ----------
"%c,  %-c, %1c, %*c,  %-*c,  %*c, %-*c" // 1st '*' = 12, 2nd '*' = 18

0a1
> a,  a, -,            -,  0           ,             %, a            --- Return : 66

----------Test 500 : ----------
"%c,  %-c, %1c, %*c,  %-*c,  %*c, %-*c" // 1st '*' = 12, 2nd '*' = 18

0a1
> a,  a, -, -           ,  0           ,  %           , a            --- Return : 66

----------Test 501 : ----------
"%c,  %-c, %1c, %*c,  %-*c,  %*c, %-*c" // 1st '*' = 12, 2nd '*' = 18

0a1
> a,  a, 0,            0,  -           ,             -, a            --- Return : 66

----------Test 502 : ----------
"%c,  %-c, %1c, %*c,  %-*c,  %*c" // 1st '*' = 12, 2nd '*' = 18

0a1
> ô,  ÿ, ,            ô,  ÿ           ,              --- Return : 52

----------Test 503 : ----------
"%%, 	, \, ", ', +" // 1st '*' = 12, 2nd '*' = 18

0a1
> %, 	, \, ", ', + --- Return : 16

----------Test 504 : ----------
"%%%dbada%s%%**%s**-d%%0*d%-12s0*@" // 1st '*' = 12, 2nd '*' = 18

0a1
> %4200badabada%**%%**-d%0*d-12         0*@ --- Return : 41

----------Test 505 : ----------
"%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d" // 1st '*' = 12, 2nd '*' = 18

0a1
> 8           , 000000000008, 000000000008, 000000000008, 000000000008 --- Return : 68

----------Test 506 : ----------
"%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d" // 1st '*' = 12, 2nd '*' = 18

0a1
> -12         , -000000000012, -000000000012, -000000000012, -000000000012 --- Return : 72

----------Test 507 : ----------
"%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d" // 1st '*' = 12, 2nd '*' = 18

0a1
> 0           , 000000000000, 000000000000, 000000000000, 000000000000 --- Return : 68

----------Test 508 : ----------
"%i, %d, %d, %d, %d, %d, %u, %x, %X" // 1st '*' = 12, 2nd '*' = 18

0a1
> 0, 0, 0, 0, 0, 0, 0, 0, 0 --- Return : 25

----------Test 509 : ----------
"%*i, %*d, %*d, %*d, %*d, %*d, %*u, %*x, %*X" // 1st '*' = 12, 2nd '*' = 18

0a1
>            0,            0,            0,            0,            0,            0,            0,            0,            0 --- Return : 124

----------Test 510 : ----------
"%c, %-c, %12c, %-3c, %-1c, %1c, %-2c, %-4c, %5c, %3c, %-*c, %-*c, %*c, %*c" // 1st '*' = 12, 2nd '*' = 18

Binary files ft.txt and printf.txt differ

----------Test 511 : ----------
"%-2s, %.s, %-4s, %-2.4s, %-8.12s, %3s, %8s, %---2s, %.*s, %.0s, %.1s, %.2s, %.4s, %.8s" // 1st '*' = 12, 2nd '*' = 18

0a1
> (null), , (null), (nul, (null)  , (null),   (null), (null), (null), , (, (n, (nul, (null) --- Return : 89

----------Test 512 : ----------
"(null)" // 1st '*' = 12, 2nd '*' = 18

0a1
> (null) --- Return : 6

----------Test 513 : ----------
"" // 1st '*' = 12, 2nd '*' = 18

0a1
>  --- Return : 0

#####42TESTS-PRINTF#####
#####42TESTS-PRINTF#####
